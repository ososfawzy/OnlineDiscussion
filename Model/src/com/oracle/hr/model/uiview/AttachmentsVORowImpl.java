package com.oracle.hr.model.uiview;

import com.oracle.hr.model.entity.AttachmentsEOImpl;

import java.sql.Timestamp;

import oracle.jbo.RowSet;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Feb 17 12:37:47 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AttachmentsVORowImpl extends ViewRowImpl {

    public static final int ENTITY_ATTACHMENTSEO = 0;

    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Title,
        Type,
        Description,
        Category,
        Lastupdatedby,
        Lastupdatedate,
        AttachmentId,
        MessageId,
        CategoryVO1;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }

    public static final int TITLE = AttributesEnum.Title.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int LASTUPDATEDBY = AttributesEnum.Lastupdatedby.index();
    public static final int LASTUPDATEDATE = AttributesEnum.Lastupdatedate.index();
    public static final int ATTACHMENTID = AttributesEnum.AttachmentId.index();
    public static final int MESSAGEID = AttributesEnum.MessageId.index();
    public static final int CATEGORYVO1 = AttributesEnum.CategoryVO1.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AttachmentsVORowImpl() {
    }

    /**
     * Gets AttachmentsEO entity object.
     * @return the AttachmentsEO
     */
    public AttachmentsEOImpl getAttachmentsEO() {
        return (AttachmentsEOImpl) getEntity(ENTITY_ATTACHMENTSEO);
    }

    /**
     * Gets the attribute value for TITLE using the alias name Title.
     * @return the TITLE
     */
    public String getTitle() {
        return (String) getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as attribute value for TITLE using the alias name Title.
     * @param value value to set the TITLE
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for TYPE using the alias name Type.
     * @return the TYPE
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as attribute value for TYPE using the alias name Type.
     * @param value value to set the TYPE
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for DESCRIPTION using the alias name Description.
     * @return the DESCRIPTION
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as attribute value for DESCRIPTION using the alias name Description.
     * @param value value to set the DESCRIPTION
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for CATEGORY using the alias name Category.
     * @return the CATEGORY
     */
    public String getCategory() {
        return (String) getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as attribute value for CATEGORY using the alias name Category.
     * @param value value to set the CATEGORY
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for LASTUPDATEDBY using the alias name Lastupdatedby.
     * @return the LASTUPDATEDBY
     */
    public String getLastupdatedby() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as attribute value for LASTUPDATEDBY using the alias name Lastupdatedby.
     * @param value value to set the LASTUPDATEDBY
     */
    public void setLastupdatedby(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for LASTUPDATEDATE using the alias name Lastupdatedate.
     * @return the LASTUPDATEDATE
     */
    public Timestamp getLastupdatedate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as attribute value for LASTUPDATEDATE using the alias name Lastupdatedate.
     * @param value value to set the LASTUPDATEDATE
     */
    public void setLastupdatedate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for ATTACHMENT_ID using the alias name AttachmentId.
     * @return the ATTACHMENT_ID
     */
    public Number getAttachmentId() {
        return (Number) getAttributeInternal(ATTACHMENTID);
    }

    /**
     * Sets <code>value</code> as attribute value for ATTACHMENT_ID using the alias name AttachmentId.
     * @param value value to set the ATTACHMENT_ID
     */
    public void setAttachmentId(Number value) {
        setAttributeInternal(ATTACHMENTID, value);
    }

    /**
     * Gets the attribute value for MESSAGE_ID using the alias name MessageId.
     * @return the MESSAGE_ID
     */
    public Number getMessageId() {
        return (Number) getAttributeInternal(MESSAGEID);
    }

    /**
     * Sets <code>value</code> as attribute value for MESSAGE_ID using the alias name MessageId.
     * @param value value to set the MESSAGE_ID
     */
    public void setMessageId(Number value) {
        setAttributeInternal(MESSAGEID, value);
    }


    /**
     * Gets the view accessor <code>RowSet</code> CategoryVO1.
     */
    public RowSet getCategoryVO1() {
        return (RowSet) getAttributeInternal(CATEGORYVO1);
    }
}

