package com.oracle.hr.model.entity;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 13 17:14:29 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class MessagesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        MessageId,
        MessageTitle,
        MessageBody,
        Sentfrom,
        Sentto,
        Sentdate,
        Type;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int MESSAGEID = AttributesEnum.MessageId.index();
    public static final int MESSAGETITLE = AttributesEnum.MessageTitle.index();
    public static final int MESSAGEBODY = AttributesEnum.MessageBody.index();
    public static final int SENTFROM = AttributesEnum.Sentfrom.index();
    public static final int SENTTO = AttributesEnum.Sentto.index();
    public static final int SENTDATE = AttributesEnum.Sentdate.index();
    public static final int TYPE = AttributesEnum.Type.index();

    /**
     * This is the default constructor (do not remove).
     */
    public MessagesEOImpl() {
    }

    /**
     * Gets the attribute value for MessageId, using the alias name MessageId.
     * @return the value of MessageId
     */
    public Number getMessageId() {
        return (Number) getAttributeInternal(MESSAGEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MessageId.
     * @param value value to set the MessageId
     */
    public void setMessageId(Number value) {
        setAttributeInternal(MESSAGEID, value);
    }

    /**
     * Gets the attribute value for MessageTitle, using the alias name MessageTitle.
     * @return the value of MessageTitle
     */
    public String getMessageTitle() {
        return (String) getAttributeInternal(MESSAGETITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for MessageTitle.
     * @param value value to set the MessageTitle
     */
    public void setMessageTitle(String value) {
        setAttributeInternal(MESSAGETITLE, value);
    }

    /**
     * Gets the attribute value for MessageBody, using the alias name MessageBody.
     * @return the value of MessageBody
     */
    public String getMessageBody() {
        return (String) getAttributeInternal(MESSAGEBODY);
    }

    /**
     * Sets <code>value</code> as the attribute value for MessageBody.
     * @param value value to set the MessageBody
     */
    public void setMessageBody(String value) {
        setAttributeInternal(MESSAGEBODY, value);
    }

    /**
     * Gets the attribute value for Sentfrom, using the alias name Sentfrom.
     * @return the value of Sentfrom
     */
    public String getSentfrom() {
        return (String) getAttributeInternal(SENTFROM);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sentfrom.
     * @param value value to set the Sentfrom
     */
    public void setSentfrom(String value) {
        setAttributeInternal(SENTFROM, value);
    }

    /**
     * Gets the attribute value for Sentto, using the alias name Sentto.
     * @return the value of Sentto
     */
    public String getSentto() {
        return (String) getAttributeInternal(SENTTO);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sentto.
     * @param value value to set the Sentto
     */
    public void setSentto(String value) {
        setAttributeInternal(SENTTO, value);
    }

    /**
     * Gets the attribute value for Sentdate, using the alias name Sentdate.
     * @return the value of Sentdate
     */
    public Timestamp getSentdate() {
        return (Timestamp) getAttributeInternal(SENTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Sentdate.
     * @param value value to set the Sentdate
     */
    public void setSentdate(Timestamp value) {
        setAttributeInternal(SENTDATE, value);
    }

    /**
     * Gets the attribute value for Type, using the alias name Type.
     * @return the value of Type
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Type.
     * @param value value to set the Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * @param messageId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number messageId) {
        return new Key(new Object[] { messageId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.oracle.hr.model.entity.MessagesEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        setMessageId(getSequence("MessageSeq"));
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
            try {
                super.lock();
            } catch (oracle.jbo.RowInconsistentException e) {
                if (e.getErrorCode().equals("25014")) {
                    super.lock();
                } else
                    throw e;
            }
        }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
    
    public Number getSequence(String sequenceName){
            Number sequenceValue = new Number(0);
            if (sequenceName !=null && !sequenceName.equals("")){
                SequenceImpl sequenceImpl = new SequenceImpl(sequenceName, getDBTransaction());
                sequenceValue = sequenceImpl.getSequenceNumber();
            }
            return sequenceValue;
        }
    
}

