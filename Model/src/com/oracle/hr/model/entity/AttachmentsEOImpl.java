package com.oracle.hr.model.entity;

import java.sql.Timestamp;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Feb 13 16:52:19 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AttachmentsEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        Title,
        Type,
        Description,
        Category,
        Lastupdatedby,
        Lastupdatedate,
        AttachmentId,
        MessageId;
        static AttributesEnum[] vals = null;
        ;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int TITLE = AttributesEnum.Title.index();
    public static final int TYPE = AttributesEnum.Type.index();
    public static final int DESCRIPTION = AttributesEnum.Description.index();
    public static final int CATEGORY = AttributesEnum.Category.index();
    public static final int LASTUPDATEDBY = AttributesEnum.Lastupdatedby.index();
    public static final int LASTUPDATEDATE = AttributesEnum.Lastupdatedate.index();
    public static final int ATTACHMENTID = AttributesEnum.AttachmentId.index();
    public static final int MESSAGEID = AttributesEnum.MessageId.index();

    /**
     * This is the default constructor (do not remove).
     */
    public AttachmentsEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.oracle.hr.model.entity.AttachmentsEO");
    }


    /**
     * Gets the attribute value for Title, using the alias name Title.
     * @return the value of Title
     */
    public String getTitle() {
        return (String) getAttributeInternal(TITLE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Title.
     * @param value value to set the Title
     */
    public void setTitle(String value) {
        setAttributeInternal(TITLE, value);
    }

    /**
     * Gets the attribute value for Type, using the alias name Type.
     * @return the value of Type
     */
    public String getType() {
        return (String) getAttributeInternal(TYPE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Type.
     * @param value value to set the Type
     */
    public void setType(String value) {
        setAttributeInternal(TYPE, value);
    }

    /**
     * Gets the attribute value for Description, using the alias name Description.
     * @return the value of Description
     */
    public String getDescription() {
        return (String) getAttributeInternal(DESCRIPTION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Description.
     * @param value value to set the Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**
     * Gets the attribute value for Category, using the alias name Category.
     * @return the value of Category
     */
    public String getCategory() {
        return (String) getAttributeInternal(CATEGORY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Category.
     * @param value value to set the Category
     */
    public void setCategory(String value) {
        setAttributeInternal(CATEGORY, value);
    }

    /**
     * Gets the attribute value for Lastupdatedby, using the alias name Lastupdatedby.
     * @return the value of Lastupdatedby
     */
    public String getLastupdatedby() {
        return (String) getAttributeInternal(LASTUPDATEDBY);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lastupdatedby.
     * @param value value to set the Lastupdatedby
     */
    public void setLastupdatedby(String value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**
     * Gets the attribute value for Lastupdatedate, using the alias name Lastupdatedate.
     * @return the value of Lastupdatedate
     */
    public Timestamp getLastupdatedate() {
        return (Timestamp) getAttributeInternal(LASTUPDATEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for Lastupdatedate.
     * @param value value to set the Lastupdatedate
     */
    public void setLastupdatedate(Timestamp value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**
     * Gets the attribute value for AttachmentId, using the alias name AttachmentId.
     * @return the value of AttachmentId
     */
    public Number getAttachmentId() {
        return (Number) getAttributeInternal(ATTACHMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for AttachmentId.
     * @param value value to set the AttachmentId
     */
    public void setAttachmentId(Number value) {
        setAttributeInternal(ATTACHMENTID, value);
    }

    /**
     * Gets the attribute value for MessageId, using the alias name MessageId.
     * @return the value of MessageId
     */
    public Number getMessageId() {
        return (Number) getAttributeInternal(MESSAGEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for MessageId.
     * @param value value to set the MessageId
     */
    public void setMessageId(Number value) {
        setAttributeInternal(MESSAGEID, value);
    }


    /**
     * @param attachmentId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number attachmentId) {
        return new Key(new Object[] { attachmentId });
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        setAttachmentId(getSequenceValue("AttachmentSeq"));
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
            try {
                super.lock();
            } catch (oracle.jbo.RowInconsistentException e) {
                if (e.getErrorCode().equals("25014")) {
                    super.lock();
                } else
                    throw e;
            }
        }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
    
    public Number getSequenceValue(String sequenceName){
            Number sequenceValue = new Number(0);
            if (sequenceName !=null && !sequenceName.equals("")){
                SequenceImpl sequenceImpl = new SequenceImpl(sequenceName, getDBTransaction());
                sequenceValue = sequenceImpl.getSequenceNumber();
            }
            return sequenceValue;
        }
    
}

